Run KNOWNET locally

	1.	Run Dynamodb locally
docker run -d -p 8000:8000 amazon/dynamodb-local

	2.	Create Chats table in the local Dynamodb
brew install awscli 
export AWS_REGION=us-east-1 export AWS_ACCESS_KEY_ID=local export AWS_SECRET_ACCESS_KEY=local

aws dynamodb create-table \
  --table-name Chats \
  --attribute-definitions AttributeName=id,AttributeType=S \
  --key-schema AttributeName=id,KeyType=HASH \
  --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
  --endpoint-url http://localhost:8000


	3.	Update dynamodb client in the route.ts  // (/app/api/chat/route.ts) 
const dynamoDBClient = new DynamoDBClient({
  region: 'us-east-1',
 endpoint: 'http://localhost:8000', // Point to the local DynamoDB instance
  credentials: {
    accessKeyId: 'local',
    secretAccessKey: 'local'
  }
})


	4.	Install neo4j locally  // docker pull neo4j

docker run --name neo4j \
  -p 7474:7474 -p 7687:7687 \
  -v /Users/zhangl9/Downloads/Neo4j_data:/import \
  -e NEO4J_AUTH=neo4j/strongpass \
  -e NEO4J_server_memory_heap_initial__size=2G \
  -e NEO4J_server_memory_heap_max__size=4G \
  -e NEO4J_server_memory_pagecache_size=2G \
  -d neo4j



Go to Neo4j admin web ui: localhost:7474  Login with user name and password: neo4j/strongpass

Execute these commands to import csv files into nodes and relations:  CREATE INDEX FOR (n:Node) ON (n.CUI);  LOAD CSV WITH HEADERS FROM 'file:///neo4j_node_updated.csv' AS row
CREATE (:Node {CUI: row.CUI, Name: row.Name, Semantic_Type: row.Semantic_Type, Category: row.Category, Label: row.Label});  
Split relationship files into 2 because there were some memory issues while processing a single file. 
(KG data could be downloaded at https://github.com/zhang-informatics/ADInt ) 
(Separate files could be downloaded at https://drive.google.com/drive/folders/1iB6k3UQB9t0L5IuFK_GXteQbEa5wag9J?usp=drive_link) 
LOAD CSV WITH HEADERS FROM 'file:///rel_1.csv' AS row
MATCH (a:Node {CUI: row.START_ID})
MATCH (b:Node {CUI: row.END_ID})
CREATE (a)-[:Relation {type: row.PREDICATE, PubMed_ID: row.PubMed_ID, Sentence: row.SENTENCE, Start_Label: row.START_LABEL, End_Label: row.END_LABEL}]->(b);

LOAD CSV WITH HEADERS FROM 'file:///rel_2.csv' AS row
MATCH (a:Node {CUI: row.START_ID})
MATCH (b:Node {CUI: row.END_ID})
CREATE (a)-[:Relation {type: row.PREDICATE, PubMed_ID: row.PubMed_ID, Sentence: row.SENTENCE, Start_Label: row.START_LABEL, End_Label: row.END_LABEL}]->(b);


>docker ps -a
>docker start/stop [name]  //  [neo4j], [reverent_jang]

>pnpm dev 
